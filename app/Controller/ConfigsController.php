<?php

App::uses('AppController', 'Controller');

/**
 * Configs Controller
 * Owner: Abdul Jalil
 * http://www.softwareend.com
 * @property Config $Config
 * @property PaginatorComponent $Paginator
 */
class ConfigsController extends AppController {

    /**
     * Components
     *
     * @var array
     */
    public $components = array('Paginator', 'Uploader');

    /**
     * index method
     * Generated by Abdul Jalil
     * @return void
     */
    public function index() {
        $this->Config->recursive = 0;
        $this->set('configs', $this->Paginator->paginate());
    }

    /**
     * view method
     *
     * @throws NotFoundException
     * @param string $id
     * @return void
     */
    public function view($id = null) {
        if (!$this->Config->exists($id)) {
            throw new NotFoundException(__('Invalid config'));
        }
        $options = array('conditions' => array('Config.' . $this->Config->primaryKey => $id));
        $this->set('config', $this->Config->find('first', $options));
    }

    /**
     * edit method
     *
     * @throws NotFoundException
     * @param string $id
     * @return void
     */
    public function edit() {
        if ($this->request->is(array('post', 'put'))) {
            foreach ($this->request->data['Config'] as $key => $value) {
                $this->Config->query('UPDATE configs SET `value` = \'' . $value . '\' WHERE `key` = \'' . $key . '\'');
            }

            $this->Uploader->uploadFile($this->request->data['User']['image'], 'bg', '', 'bg');

            $this->Flash->success(__('The config has been saved.'));
            return $this->redirect(array('action' => 'index'));
        }

        $roles = ClassRegistry::init('Role')->find('list', array('conditions' => array('status' => E_ERROR)));
        $designations = ClassRegistry::init('Designation')->find('list', array('conditions' => array('status' => E_ERROR)));
        $this->set(compact('roles', 'designations'));
    }

    public function parcel_receiver1() {
        $this->loadModel('Merchandisingteam');
        if ($this->request->is('post')) {
            $this->request->data['Merchandisingteam']['team_members'] = ',';
            foreach ($this->request->data['permission'] as $key => $val) {
                if ($val != '0') {
                    $this->request->data['Merchandisingteam']['team_members'] .= ',' . $key;
                    
                }
            }

            $this->Config->query("UPDATE configs SET `value` = '" . $this->request->data['Merchandisingteam']['team_members'] . ",' WHERE `key` = 'PARCEL_RECEIVER1'");
            $this->Flash->success(__('The merchandisingteam has been saved.'));
            return $this->redirect(array('action' => 'parcel_receiver1'));
        }

        $userlistssss = $this->Merchandisingteam->User->find('all', array('conditions' => array('User.status' => E_ERROR), 'fields' => array('User.id', 'User.company_id', 'User.department_id', 'User.designation_id', 'User.name'), 'order' => array('User.designation_id' => 'ASC'), 'recursive' => -1));
        $userlists = array();
        foreach ($userlistssss as $userlist) {
            $userlists[$userlist['User']['company_id']][$userlist['User']['id']] = $userlist;
        }

        $departmentls = $this->Merchandisingteam->User->Department->find('all', array('conditions' => array('status' => E_ERROR), 'order' => array('name' => 'ASC'), 'recursive' => -1));
        $departments = array();
        foreach ($departmentls as $department) {
            $departments[$department['Department']['id']] = array($department['Department']['name'], $department['Department']['color_code']);
        }

        $designationls = $this->Merchandisingteam->User->Designation->find('all', array('conditions' => array('status' => E_ERROR), 'order' => array('name' => 'ASC'), 'recursive' => -1));
        $designations = array();
        foreach ($designationls as $designation) {
            $designations[$designation['Designation']['id']] = array($designation['Designation']['name'], $designation['Designation']['color_code']);
        }

        $companies = $this->Merchandisingteam->Company->find('list', array('conditions' => array('status' => E_ERROR), 'order' => array('name' => 'ASC')));
        $this->set(compact('companies', 'userlists', 'departments', 'designations'));
    }

    public function parcel_receiver2() {
        $this->loadModel('Merchandisingteam');
        if ($this->request->is('post')) {
            $this->request->data['Merchandisingteam']['team_members'] = ',';
            foreach ($this->request->data['permission'] as $key => $val) {
                if ($val != '0') {
                    $this->request->data['Merchandisingteam']['team_members'] .= ',' . $key;
                    
                }
            }

            $this->Config->query("UPDATE configs SET `value` = '" . $this->request->data['Merchandisingteam']['team_members'] . ",' WHERE `key` = 'PARCEL_RECEIVER2'");
            $this->Flash->success(__('The merchandisingteam has been saved.'));
            return $this->redirect(array('action' => 'parcel_receiver2'));
        }

        $userlistssss = $this->Merchandisingteam->User->find('all', array('conditions' => array('User.status' => E_ERROR), 'fields' => array('User.id', 'User.company_id', 'User.department_id', 'User.designation_id', 'User.name'), 'order' => array('User.designation_id' => 'ASC'), 'recursive' => -1));
        $userlists = array();
        foreach ($userlistssss as $userlist) {
            $userlists[$userlist['User']['company_id']][$userlist['User']['id']] = $userlist;
        }

        $departmentls = $this->Merchandisingteam->User->Department->find('all', array('conditions' => array('status' => E_ERROR), 'order' => array('name' => 'ASC'), 'recursive' => -1));
        $departments = array();
        foreach ($departmentls as $department) {
            $departments[$department['Department']['id']] = array($department['Department']['name'], $department['Department']['color_code']);
        }

        $designationls = $this->Merchandisingteam->User->Designation->find('all', array('conditions' => array('status' => E_ERROR), 'order' => array('name' => 'ASC'), 'recursive' => -1));
        $designations = array();
        foreach ($designationls as $designation) {
            $designations[$designation['Designation']['id']] = array($designation['Designation']['name'], $designation['Designation']['color_code']);
        }

        $companies = $this->Merchandisingteam->Company->find('list', array('conditions' => array('status' => E_ERROR), 'order' => array('name' => 'ASC')));
        $this->set(compact('companies', 'userlists', 'departments', 'designations'));
    }

}
